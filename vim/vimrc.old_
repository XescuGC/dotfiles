" An example for a vimrc file.
"
" Maintainer:	Bram Moolenaar <Bram@vim.org>
" Last change:	2008 Dec 17
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"	      for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"	    for OpenVMS:  sys$login:.vimrc
"
" To execute the pathogen and run the plugins "
"call pathogen#infect()
execute pathogen#infect('bundle/{}', 'syntax/{}')

" To use vim-powerline "
let g:Powerline_symbols = 'fancy'

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" Colorscheme
colorscheme railscasts
" colorscheme morning
" colorscheme codeschool

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" Colors for SignColumn
" highlight clear SignColumn

" Enables Folding with Vim
set foldenable
set foldmethod=indent
set foldlevel=3

" Mappings for Folde
nnoremap <Space> za

" Changed fonts for powerline(airline)
let g:airline_powerline_fonts=1
set laststatus=2
let g:Powerline_symbols = 'fancy'
let g:airline#extensions#tabline#enabled = 1

" Filetype plugins enabled
filetype plugin on

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

set nobackup		" do not keep a backup file, use versions instead
set history=50	" keep 50 lines of command line history
set ruler		    " show the cursor position all the time
set showcmd		  " display incomplete commands
set incsearch		" do incremental searching
set number      " numerate the lines "
set scrolloff=5 " number off lines separed of bottom"

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
"map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
"inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
"if has("autocmd")

  "" Enable file type detection.
  "" Use the default filetype settings, so that mail gets 'tw' set to 72,
  "" 'cindent' is on in C files, etc.
  "" Also load indent files, to automatically do language-dependent indenting.
  "filetype plugin indent on

  "" Put these in an autocmd group, so that we can delete them easily.
  "augroup vimrcEx
  "au!

  "" For all text files set 'textwidth' to 78 characters.
  "autocmd FileType text setlocal textwidth=78


  "" When editing a file, always jump to the last known cursor position.
  "" Don't do it when the position is invalid or when inside an event handler
  "" (happens when dropping a file on gvim).
  "" Also don't do it when the mark is in the first line, that is the default
  "" position when opening a file.
  "autocmd BufReadPost *
    "\ if line("'\"") > 1 && line("'\"") <= line("$") |
    "\   exe "normal! g`\"" |
    "\ endif

  "augroup END

"else

  "set autoindent		" always set autoindenting on

"endif " has("autocmd")

"" Convenient command to see the difference between the current buffer and the
"" file it was loaded from, thus the changes you made.
"" Only define it when not defined already.
"if !exists(":DiffOrig")
  "command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
			"\ | wincmd p | diffthis
"endif

" Markdown Highlight "
"au BufRead,BufNewFile *.md set filetype=markdown

" Wild Menu "
set wildmenu
set wildmode=longest:full,full

" CtrlP "
:nmap ; :CtrlPBuffer<CR>

" Automap enter with end
imap âœ  <CR><CR>end<Esc>-cc

" NERD-Tree
" =======================================
"
:map	<C-t>	:tabnew<CR>
:map	<S-L>	:tabnext<CR>
:map	<S-H>	:tabprevious<CR>

" :map	<S-l>	:FuzzyFinderFile<CR>
" :map	<S-m>	:FuzzyFinderTextMate<CR>
" 
:map	<C-Down>	:NERDTree<CR>
:map	<C-Up>	:NERDTreeClose<CR>

:map	<C-l>	:NERDTree<CR>

" Hamlc
" =====================================
"
autocmd BufRead,BufNewFile *.hamlc set filetype=haml

"
" ======================================
"
" Spaces instead of tabs
set tabstop=2 
set shiftwidth=2
set expandtab
set ai

" ======= vim-jsx
"
let g:jsx_ext_required = 0

" Disable mouse (in macvim or in gui mode)
set mouse-=a

"highlight LineNr ctermfg=red

"set runtimepath+=$HOME/.vim/ctrlp.vim
"set wildignore+=*/.git/*,*.so,*/system/*
